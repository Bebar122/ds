"local offset = 1100\r\nlocal invisible = game.Players.LocalPlayer\r\nlocal grips = {}\r\nlocal heldTool\r\nlocal gripChanged\r\nlocal handle\r\nlocal weld\r\nfunction setDisplayDistance(distance)\r\n    for _, player in pairs(game.Players:GetPlayers()) do\r\n        if player.Character and player.Character:FindFirstChildWhichIsA(\"Humanoid\") then\r\n            player.Character:FindFirstChildWhichIsA(\"Humanoid\").NameDisplayDistance = distance\r\n            player.Character:FindFirstChildWhichIsA(\"Humanoid\").HealthDisplayDistance = distance\r\n        end\r\n    end\r\nend\r\nlocal tool = Instance.new(\"Tool\", game.Players.LocalPlayer.Backpack)\r\ntool.Name = \"Ghost\"\r\ntool.RequiresHandle = false\r\ntool.CanBeDropped = false\r\ntool.Equipped:Connect(\r\n    function()\r\n        wait()\r\n        if not invisible then\r\n            invisible = true\r\n            tool.Name = \"Ghost: Enabled\"\r\n            if handle then\r\n                handle:Destroy()\r\n            end\r\n            if weld then\r\n                weld:Destroy()\r\n            end\r\n            handle = Instance.new(\"Part\", workspace)\r\n            handle.Name = \"Handle\"\r\n            handle.Transparency = 1\r\n            handle.CanCollide = false\r\n            handle.Size = Vector3.new(2, 1, 1)\r\n            weld = Instance.new(\"Weld\", handle)\r\n            weld.Part0 = handle\r\n            weld.Part1 = game.Players.LocalPlayer.Character.HumanoidRootPart\r\n            weld.C0 = CFrame.new(0, offset - 1.5, 0)\r\n            setDisplayDistance(offset + 100)\r\n            workspace.CurrentCamera.CameraSubject = handle\r\n            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, offset, 0)\r\n            game.Players.LocalPlayer.Character.Humanoid.HipHeight = offset\r\n            game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)\r\n            for _, child in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do\r\n                if child:IsA(\"Tool\") and child ~= tool then\r\n                    grips[child] = child.Grip\r\n                end\r\n            end\r\n        elseif invisible then\r\n            invisible = false\r\n            tool.Name = \"Ghost: Disabled\"\r\n            if handle then\r\n                handle:Destroy()\r\n            end\r\n            if weld then\r\n                weld:Destroy()\r\n            end\r\n            for _, child in pairs(game.Players.LocalPlayer.Character:GetChildren()) do\r\n                if child:IsA(\"Tool\") then\r\n                    child.Parent = game.Players.LocalPlayer.Backpack\r\n                end\r\n            end\r\n            for tool, grip in pairs(grips) do\r\n                if tool then\r\n                    tool.Grip = grip\r\n                end\r\n            end\r\n            heldTool = nil\r\n            setDisplayDistance(100)\r\n            workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character.Humanoid\r\n            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, -offset, 0)\r\n            game.Players.LocalPlayer.Character.Humanoid.HipHeight = 0\r\n        end\r\n        tool.Parent = game.Players.LocalPlayer.Backpack\r\n    end\r\n)\r\ngame.Players.LocalPlayer.Character.ChildAdded:Connect(\r\n    function(child)\r\n        wait()\r\n        if invisible and child:IsA(\"Tool\") and child ~= heldTool and child ~= tool then\r\n            heldTool = child\r\n            local lastGrip = heldTool.Grip\r\n            if not grips[heldTool] then\r\n                grips[heldTool] = lastGrip\r\n            end\r\n            for _, track in pairs(game.Players.LocalPlayer.Character.Humanoid:GetPlayingAnimationTracks()) do\r\n                track:Stop()\r\n            end\r\n            game.Players.LocalPlayer.Character.Animate.Disabled = true\r\n            heldTool.Grip = heldTool.Grip * (CFrame.new(0, offset - 1.5, 1.5) * CFrame.Angles(math.rad(-90), 0, 0))\r\n            heldTool.Parent = game.Players.LocalPlayer.Backpack\r\n            heldTool.Parent = game.Players.LocalPlayer.Character\r\n            if gripChanged then\r\n                gripChanged:Disconnect()\r\n            end\r\n            gripChanged =\r\n                heldTool:GetPropertyChangedSignal(\"Grip\"):Connect(\r\n                function()\r\n                    wait()\r\n                    if not invisible then\r\n                        gripChanged:Disconnect()\r\n                    end\r\n                    if heldTool.Grip ~= lastGrip then\r\n                        lastGrip =\r\n                            heldTool.Grip * (CFrame.new(0, offset - 1.5, 1.5) * CFrame.Angles(math.rad(-90), 0, 0))\r\n                        heldTool.Grip = lastGrip\r\n                        heldTool.Parent = game.Players.LocalPlayer.Backpack\r\n                        heldTool.Parent = game.Players.LocalPlayer.Character\r\n                    end\r\n                end\r\n            )\r\n        end\r\n    end\r\n)"
